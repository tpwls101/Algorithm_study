import java.util.*;

/**
Q. 특정 시간 동안 알람이 울린 횟수는?
1. (끝나는 시간까지 알람이 울린 횟수) - (시작 시간까지 알람이 울린 횟수) + (현재 시간에 알람이 울리는지)
    -> 00시를 시작 기준으로 생각한다!
    -> 시작시간도 빼버렸기 때문에 시작시간에 알람이 울린다면 더해줘야 한다.
2. 분침과 시침이 겹쳐있는 경우 -> 알람은 한번만 울려야 한다!
    이 경우는 시침, 분침, 초침이 모두 12시를 가리킬 때 뿐이다.
    분침과 시침 모두 00:00:00 를 고려하여 카운트했으니 12:00:00 이 몇 번 나오는지 계산해서 빼준다.
    

Tip) 시간을 초 단위로 바꿔서 계산한다!
1. 초침과 분침
    - 1분에 1번
    - 1시간에 59번 (59분에서 초침이 한바퀴 도는 동안 모두 12시 방향을 가리키고 있기 때문)
2. 초침과 시침
    - 1분에 1번
    - 1시간에 60번
    - 12시간에 719번 (12시일 때 고려! 11:59 ~ 12:00 사이에 시침과 초침이 안겹치므로 60x12-1)
*/

class Solution {
    public int solution(int h1, int m1, int s1, int h2, int m2, int s2) {
        int answer = -1;
        
        // 시간을 초 단위로 변환
        int startTime = toSec(h1, m1, s1);
        int endTime = toSec(h2, m2, s2);
        
        // (끝나는 시간까지 알람이 울린 횟수) - (시작 시간까지 알람이 울린 횟수)
        // 시작 시간까지 빼버렸으므로 시작 시간에 알람이 울리는지 확인해서 더해준다.
        answer = countAlarm(endTime) - countAlarm(startTime) + (checkAlarm(startTime) ? 1:0);
        
        return answer;
    }
    
    public int toSec(int h, int m, int s) {
        return h * 3600 + m * 60 + s;
    }
    
    // 알람이 몇 번 울리는지 세는 함수
    public int countAlarm(int time) {
        int count = 0;
        
        // 초침과 분침이 만날 때 카운트
        // 1분에 1번
        // 1시간에 59번
        // 3600초(1시간) : 59번 = time초 : x번
        // x번 = 59번 x time초 / 3600초
        count += 59 * time / 3600;
        
        // 초침과 시침이 만날 때 카운트
        // 1분에 1번
        // 1시간에 60번
        // 12시간에 719번
        // 43200초(12시간) : 719번 = time초 : x번
        // x번 = 719번 x time초 / 43200초
        count += 719 * time / 43200;
        
        // 예외 : 분침과 시침이 겹쳐있는 경우(즉, 00:00:00 or 12:00:00)
        // 분침과 시침을 계산하면서 둘 다 00시나 12시를 계산했기 때문에 한 번 빼줘야 한다.
        // 12시보다 시간이 크면 2번 빼주고, 아니면 00시일 때 1번만 빼주면 된다.
        count -= (time >= 43200) ? 2 : 1;
        
        return count;
    }
    
    // 현재 시간에 알람이 울리는지 확인하는 함수
    public boolean checkAlarm(int time) {
        // 현재 시간이 분침 또는 시침이랑 만나는지 확인
        return (59 * time % 3600 == 0) || (719 * time % 43200 == 0);
    }
}